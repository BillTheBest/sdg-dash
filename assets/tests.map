{"version":3,"sources":["sdg-dash/tests/app.jshint.js","sdg-dash/tests/application/adapter.jshint.js","sdg-dash/tests/application/controller.jshint.js","sdg-dash/tests/application/route.jshint.js","sdg-dash/tests/arcgis-map-sdg-index-service/service.jshint.js","sdg-dash/tests/arcgis-map-service/service.jshint.js","sdg-dash/tests/components/about-modal/component.jshint.js","sdg-dash/tests/components/arcgis-map/component.jshint.js","sdg-dash/tests/components/arcgis-map-landing/component.jshint.js","sdg-dash/tests/components/arcgis-map-sdg-index/component.jshint.js","sdg-dash/tests/components/contribute-button/component.jshint.js","sdg-dash/tests/components/contribute-modal/component.jshint.js","sdg-dash/tests/components/country-select-box/component.jshint.js","sdg-dash/tests/components/data-info-popover/component.jshint.js","sdg-dash/tests/components/geo-levels-select-box/component.jshint.js","sdg-dash/tests/components/geography-search-box/component.jshint.js","sdg-dash/tests/components/indicator-sheet/component.jshint.js","sdg-dash/tests/components/login-button/component.jshint.js","sdg-dash/tests/components/map-card/component.jshint.js","sdg-dash/tests/components/no-data-card/component.jshint.js","sdg-dash/tests/components/ranking-bar/component.jshint.js","sdg-dash/tests/components/ranking-card/component.jshint.js","sdg-dash/tests/components/ranking-component/component.jshint.js","sdg-dash/tests/components/sdg-overview-collage/component.jshint.js","sdg-dash/tests/components/sdg-select-box/component.jshint.js","sdg-dash/tests/components/storymap-card/component.jshint.js","sdg-dash/tests/components/summary-stat-card/component.jshint.js","sdg-dash/tests/components/target-select-box/component.jshint.js","sdg-dash/tests/components/targets-select-button/component.jshint.js","sdg-dash/tests/components/targets-select-modal/component.jshint.js","sdg-dash/tests/helpers/destroy-app.js","sdg-dash/tests/helpers/destroy-app.jshint.js","sdg-dash/tests/helpers/ember-i18n/test-helpers.js","sdg-dash/tests/helpers/eq.jshint.js","sdg-dash/tests/helpers/module-for-acceptance.js","sdg-dash/tests/helpers/module-for-acceptance.jshint.js","sdg-dash/tests/helpers/resolver.js","sdg-dash/tests/helpers/resolver.jshint.js","sdg-dash/tests/helpers/start-app.js","sdg-dash/tests/helpers/start-app.jshint.js","sdg-dash/tests/helpers/torii.js","sdg-dash/tests/home/route.jshint.js","sdg-dash/tests/initializers/session.jshint.js","sdg-dash/tests/integration/components/about-modal/component-test.js","sdg-dash/tests/integration/components/about-modal/component-test.jshint.js","sdg-dash/tests/integration/components/arcgis-map-landing/component-test.js","sdg-dash/tests/integration/components/arcgis-map-landing/component-test.jshint.js","sdg-dash/tests/integration/components/arcgis-map-sdg-index/component-test.js","sdg-dash/tests/integration/components/arcgis-map-sdg-index/component-test.jshint.js","sdg-dash/tests/integration/components/contribute-button/component-test.js","sdg-dash/tests/integration/components/contribute-button/component-test.jshint.js","sdg-dash/tests/integration/components/contribute-modal/component-test.js","sdg-dash/tests/integration/components/contribute-modal/component-test.jshint.js","sdg-dash/tests/integration/components/data-info-popover/component-test.js","sdg-dash/tests/integration/components/data-info-popover/component-test.jshint.js","sdg-dash/tests/integration/components/geography-search-box/component-test.js","sdg-dash/tests/integration/components/geography-search-box/component-test.jshint.js","sdg-dash/tests/integration/components/indicator-sheet/component-test.js","sdg-dash/tests/integration/components/indicator-sheet/component-test.jshint.js","sdg-dash/tests/integration/components/login-button/component-test.js","sdg-dash/tests/integration/components/login-button/component-test.jshint.js","sdg-dash/tests/integration/components/no-data-card/component-test.js","sdg-dash/tests/integration/components/no-data-card/component-test.jshint.js","sdg-dash/tests/integration/components/ranking-bar/component-test.js","sdg-dash/tests/integration/components/ranking-bar/component-test.jshint.js","sdg-dash/tests/integration/components/ranking-card/component-test.js","sdg-dash/tests/integration/components/ranking-card/component-test.jshint.js","sdg-dash/tests/integration/components/ranking-component/component-test.js","sdg-dash/tests/integration/components/ranking-component/component-test.jshint.js","sdg-dash/tests/integration/components/storymap-card/component-test.js","sdg-dash/tests/integration/components/storymap-card/component-test.jshint.js","sdg-dash/tests/integration/components/summary-stat-card/component-test.js","sdg-dash/tests/integration/components/summary-stat-card/component-test.jshint.js","sdg-dash/tests/landing/controller.jshint.js","sdg-dash/tests/landing/route.jshint.js","sdg-dash/tests/locales/ar/config.jshint.js","sdg-dash/tests/locales/ar/translations.jshint.js","sdg-dash/tests/locales/en/config.jshint.js","sdg-dash/tests/locales/en/translations.jshint.js","sdg-dash/tests/locales/es/config.jshint.js","sdg-dash/tests/locales/es/translations.jshint.js","sdg-dash/tests/locales/fr/config.jshint.js","sdg-dash/tests/locales/fr/translations.jshint.js","sdg-dash/tests/locales/ru/config.jshint.js","sdg-dash/tests/locales/ru/translations.jshint.js","sdg-dash/tests/map-overview/route.jshint.js","sdg-dash/tests/map-service/service.jshint.js","sdg-dash/tests/router.jshint.js","sdg-dash/tests/sdg/adapter.jshint.js","sdg-dash/tests/sdg/controller.jshint.js","sdg-dash/tests/sdg/model.jshint.js","sdg-dash/tests/sdg/route.jshint.js","sdg-dash/tests/sdg/serializer.jshint.js","sdg-dash/tests/sdg-overview/adapter.jshint.js","sdg-dash/tests/sdg-overview/controller.jshint.js","sdg-dash/tests/sdg-overview/model.jshint.js","sdg-dash/tests/sdg-overview/route.jshint.js","sdg-dash/tests/sdg-overview/serializer.jshint.js","sdg-dash/tests/session/service.jshint.js","sdg-dash/tests/test-helper.js","sdg-dash/tests/test-helper.jshint.js","sdg-dash/tests/transitions.jshint.js","sdg-dash/tests/unit/application/controller-test.js","sdg-dash/tests/unit/application/controller-test.jshint.js","sdg-dash/tests/unit/arcgis-map-sdg-index-service/service-test.js","sdg-dash/tests/unit/arcgis-map-sdg-index-service/service-test.jshint.js","sdg-dash/tests/unit/arcgis-map-service/service-test.js","sdg-dash/tests/unit/arcgis-map-service/service-test.jshint.js","sdg-dash/tests/unit/helpers/eq-test.js","sdg-dash/tests/unit/helpers/eq-test.jshint.js","sdg-dash/tests/unit/sdg/adapter-test.js","sdg-dash/tests/unit/sdg/adapter-test.jshint.js","sdg-dash/tests/unit/sdg-overview/adapter-test.js","sdg-dash/tests/unit/sdg-overview/adapter-test.jshint.js","sdg-dash/tests/unit/sdg-overview/controller-test.js","sdg-dash/tests/unit/sdg-overview/controller-test.jshint.js","sdg-dash/tests/unit/sdg-overview/model-test.js","sdg-dash/tests/unit/sdg-overview/model-test.jshint.js","sdg-dash/tests/unit/sdg-overview/serializer-test.js","sdg-dash/tests/unit/sdg-overview/serializer-test.jshint.js","sdg-dash/tests/unit/video-player/controller-test.js","sdg-dash/tests/unit/video-player/controller-test.jshint.js","sdg-dash/tests/unit/video-player/route-test.js","sdg-dash/tests/unit/video-player/route-test.jshint.js","sdg-dash/tests/utils/arcgis-map-utils.jshint.js","sdg-dash/tests/utils/colors.jshint.js","sdg-dash/tests/video-player/controller.jshint.js","sdg-dash/tests/video-player/route.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('sdg-dash/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/application/adapter.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - application');\n  QUnit.test('application/adapter.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'application/adapter.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/application/controller.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - application');\n  QUnit.test('application/controller.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'application/controller.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/application/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - application');\n  QUnit.test('application/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'application/route.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/arcgis-map-sdg-index-service/service.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - arcgis-map-sdg-index-service');\n  QUnit.test('arcgis-map-sdg-index-service/service.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'arcgis-map-sdg-index-service/service.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/arcgis-map-service/service.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - arcgis-map-service');\n  QUnit.test('arcgis-map-service/service.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'arcgis-map-service/service.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/about-modal/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/about-modal');\n  QUnit.test('components/about-modal/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/about-modal/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/arcgis-map/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/arcgis-map');\n  QUnit.test('components/arcgis-map/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/arcgis-map/component.js should pass jshint.\\ncomponents/arcgis-map/component.js: line 48, col 9, \\'esri\\' is not defined.\\n\\n1 error');\n  });\n});","define('sdg-dash/tests/components/arcgis-map-landing/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/arcgis-map-landing');\n  QUnit.test('components/arcgis-map-landing/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/arcgis-map-landing/component.js should pass jshint.\\ncomponents/arcgis-map-landing/component.js: line 30, col 5, \\'esri\\' is not defined.\\n\\n1 error');\n  });\n});","define('sdg-dash/tests/components/arcgis-map-sdg-index/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/arcgis-map-sdg-index');\n  QUnit.test('components/arcgis-map-sdg-index/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/arcgis-map-sdg-index/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/contribute-button/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/contribute-button');\n  QUnit.test('components/contribute-button/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/contribute-button/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/contribute-modal/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/contribute-modal');\n  QUnit.test('components/contribute-modal/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/contribute-modal/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/country-select-box/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/country-select-box');\n  QUnit.test('components/country-select-box/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/country-select-box/component.js should pass jshint.\\ncomponents/country-select-box/component.js: line 23, col 7, Comma warnings can be turned off with \\'laxcomma\\'.\\ncomponents/country-select-box/component.js: line 22, col 13, Bad line breaking before \\',\\'.\\n\\n2 errors');\n  });\n});","define('sdg-dash/tests/components/data-info-popover/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/data-info-popover');\n  QUnit.test('components/data-info-popover/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/data-info-popover/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/geo-levels-select-box/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/geo-levels-select-box');\n  QUnit.test('components/geo-levels-select-box/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/geo-levels-select-box/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/geography-search-box/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/geography-search-box');\n  QUnit.test('components/geography-search-box/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/geography-search-box/component.js should pass jshint.\\ncomponents/geography-search-box/component.js: line 60, col 31, \\'Bloodhound\\' is not defined.\\ncomponents/geography-search-box/component.js: line 61, col 27, \\'Bloodhound\\' is not defined.\\ncomponents/geography-search-box/component.js: line 62, col 27, \\'Bloodhound\\' is not defined.\\ncomponents/geography-search-box/component.js: line 66, col 28, \\'Bloodhound\\' is not defined.\\ncomponents/geography-search-box/component.js: line 67, col 27, \\'Bloodhound\\' is not defined.\\ncomponents/geography-search-box/component.js: line 68, col 27, \\'Bloodhound\\' is not defined.\\n\\n6 errors');\n  });\n});","define('sdg-dash/tests/components/indicator-sheet/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/indicator-sheet');\n  QUnit.test('components/indicator-sheet/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/indicator-sheet/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/login-button/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/login-button');\n  QUnit.test('components/login-button/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/login-button/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/map-card/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/map-card');\n  QUnit.test('components/map-card/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/map-card/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/no-data-card/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/no-data-card');\n  QUnit.test('components/no-data-card/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/no-data-card/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/ranking-bar/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/ranking-bar');\n  QUnit.test('components/ranking-bar/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/ranking-bar/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/ranking-card/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/ranking-card');\n  QUnit.test('components/ranking-card/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/ranking-card/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/ranking-component/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/ranking-component');\n  QUnit.test('components/ranking-component/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/ranking-component/component.js should pass jshint.\\ncomponents/ranking-component/component.js: line 128, col 64, Expected an assignment or function call and instead saw an expression.\\n\\n1 error');\n  });\n});","define('sdg-dash/tests/components/sdg-overview-collage/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/sdg-overview-collage');\n  QUnit.test('components/sdg-overview-collage/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/sdg-overview-collage/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/sdg-select-box/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/sdg-select-box');\n  QUnit.test('components/sdg-select-box/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/sdg-select-box/component.js should pass jshint.\\ncomponents/sdg-select-box/component.js: line 37, col 11, Comma warnings can be turned off with \\'laxcomma\\'.\\ncomponents/sdg-select-box/component.js: line 36, col 24, Bad line breaking before \\',\\'.\\ncomponents/sdg-select-box/component.js: line 37, col 18, Bad line breaking before \\',\\'.\\n\\n3 errors');\n  });\n});","define('sdg-dash/tests/components/storymap-card/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/storymap-card');\n  QUnit.test('components/storymap-card/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/storymap-card/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/summary-stat-card/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/summary-stat-card');\n  QUnit.test('components/summary-stat-card/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/summary-stat-card/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/target-select-box/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/target-select-box');\n  QUnit.test('components/target-select-box/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/target-select-box/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/targets-select-button/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/targets-select-button');\n  QUnit.test('components/targets-select-button/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/targets-select-button/component.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/components/targets-select-modal/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/targets-select-modal');\n  QUnit.test('components/targets-select-modal/component.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/targets-select-modal/component.js should pass jshint.\\ncomponents/targets-select-modal/component.js: line 189, col 16, \\'e\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('sdg-dash/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('sdg-dash/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/destroy-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/helpers/ember-i18n/test-helpers', ['exports', 'ember'], function (exports, _ember) {\n\n  // example usage: find(`.header:contains(${t('welcome_message')})`)\n  _ember['default'].Test.registerHelper('t', function (app, key, interpolations) {\n    var i18n = app.__container__.lookup('service:i18n');\n    return i18n.t(key, interpolations);\n  });\n\n  // example usage: expectTranslation('.header', 'welcome_message');\n  _ember['default'].Test.registerHelper('expectTranslation', function (app, element, key, interpolations) {\n    var text = app.testHelpers.t(key, interpolations);\n\n    assertTranslation(element, key, text);\n  });\n\n  var assertTranslation = (function () {\n    if (typeof QUnit !== 'undefined' && typeof ok === 'function') {\n      return function (element, key, text) {\n        ok(find(element + ':contains(' + text + ')').length, 'Found translation key ' + key + ' in ' + element);\n      };\n    } else if (typeof expect === 'function') {\n      return function (element, key, text) {\n        var found = !!find(element + ':contains(' + text + ')').length;\n        expect(found).to.equal(true);\n      };\n    } else {\n      return function () {\n        throw new Error(\"ember-i18n could not find a compatible test framework\");\n      };\n    }\n  })();\n});","define('sdg-dash/tests/helpers/eq.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/eq.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/eq.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'sdg-dash/tests/helpers/start-app', 'sdg-dash/tests/helpers/destroy-app'], function (exports, _qunit, _sdgDashTestsHelpersStartApp, _sdgDashTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _sdgDashTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _sdgDashTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('sdg-dash/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/module-for-acceptance.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/helpers/resolver', ['exports', 'ember/resolver', 'sdg-dash/config/environment'], function (exports, _emberResolver, _sdgDashConfigEnvironment) {\n\n  var resolver = _emberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _sdgDashConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _sdgDashConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('sdg-dash/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/helpers/start-app', ['exports', 'ember', 'sdg-dash/app', 'sdg-dash/config/environment'], function (exports, _ember, _sdgDashApp, _sdgDashConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _sdgDashConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _sdgDashApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('sdg-dash/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/helpers/torii', ['exports'], function (exports) {\n  exports.stubValidSession = stubValidSession;\n\n  function stubValidSession(application, sessionData) {\n    var session = application.__container__.lookup('service:session');\n    var sm = session.get('stateMachine');\n    Ember.run(function () {\n      sm.send('startOpen');\n      sm.send('finishOpen', sessionData);\n    });\n  }\n});","define('sdg-dash/tests/home/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - home');\n  QUnit.test('home/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'home/route.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/initializers/session.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - initializers');\n  QUnit.test('initializers/session.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/session.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/about-modal/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('about-modal', 'Integration | Component | about modal', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 15\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'about-modal', ['loc', [null, [1, 0], [1, 15]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'about-modal', [], [], 0, null, ['loc', [null, [2, 4], [4, 20]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/about-modal/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/about-modal');\n  QUnit.test('integration/components/about-modal/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/about-modal/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/arcgis-map-landing/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('arcgis-map-landing', 'Integration | Component | arcgis map landing', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 22\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'arcgis-map-landing', ['loc', [null, [1, 0], [1, 22]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'arcgis-map-landing', [], [], 0, null, ['loc', [null, [2, 4], [4, 27]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/arcgis-map-landing/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/arcgis-map-landing');\n  QUnit.test('integration/components/arcgis-map-landing/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/arcgis-map-landing/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/arcgis-map-sdg-index/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('arcgis-map-sdg-index', 'Integration | Component | arcgis map sdg index', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 24\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'arcgis-map-sdg-index', ['loc', [null, [1, 0], [1, 24]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'arcgis-map-sdg-index', [], [], 0, null, ['loc', [null, [2, 4], [4, 29]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/arcgis-map-sdg-index/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/arcgis-map-sdg-index');\n  QUnit.test('integration/components/arcgis-map-sdg-index/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/arcgis-map-sdg-index/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/contribute-button/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('contribute-button', 'Integration | Component | contribute button', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 21\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'contribute-button', ['loc', [null, [1, 0], [1, 21]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'contribute-button', [], [], 0, null, ['loc', [null, [2, 4], [4, 26]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/contribute-button/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/contribute-button');\n  QUnit.test('integration/components/contribute-button/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/contribute-button/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/contribute-modal/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('contribute-modal', 'Integration | Component | contribute modal', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 20\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'contribute-modal', ['loc', [null, [1, 0], [1, 20]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'contribute-modal', [], [], 0, null, ['loc', [null, [2, 4], [4, 25]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/contribute-modal/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/contribute-modal');\n  QUnit.test('integration/components/contribute-modal/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/contribute-modal/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/data-info-popover/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('data-info-popover', 'Integration | Component | data info popover', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 21\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'data-info-popover', ['loc', [null, [1, 0], [1, 21]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'data-info-popover', [], [], 0, null, ['loc', [null, [2, 4], [4, 26]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/data-info-popover/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/data-info-popover');\n  QUnit.test('integration/components/data-info-popover/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/data-info-popover/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/geography-search-box/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('geography-search-box', 'Integration | Component | geography search box', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 24\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'geography-search-box', ['loc', [null, [1, 0], [1, 24]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'geography-search-box', [], [], 0, null, ['loc', [null, [2, 4], [4, 29]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/geography-search-box/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/geography-search-box');\n  QUnit.test('integration/components/geography-search-box/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/geography-search-box/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/indicator-sheet/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('indicator-sheet', 'Integration | Component | indicator sheet', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 19\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'indicator-sheet', ['loc', [null, [1, 0], [1, 19]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'indicator-sheet', [], [], 0, null, ['loc', [null, [2, 4], [4, 24]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/indicator-sheet/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/indicator-sheet');\n  QUnit.test('integration/components/indicator-sheet/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/indicator-sheet/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/login-button/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('login-button', 'Integration | Component | login button', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 16\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'login-button', ['loc', [null, [1, 0], [1, 16]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'login-button', [], [], 0, null, ['loc', [null, [2, 4], [4, 21]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/login-button/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/login-button');\n  QUnit.test('integration/components/login-button/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/login-button/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/no-data-card/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('no-data-card', 'Integration | Component | no data card', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 16\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'no-data-card', ['loc', [null, [1, 0], [1, 16]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'no-data-card', [], [], 0, null, ['loc', [null, [2, 4], [4, 21]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/no-data-card/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/no-data-card');\n  QUnit.test('integration/components/no-data-card/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/no-data-card/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/ranking-bar/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('ranking-bar', 'Integration | Component | ranking bar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 15\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'ranking-bar', ['loc', [null, [1, 0], [1, 15]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'ranking-bar', [], [], 0, null, ['loc', [null, [2, 4], [4, 20]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/ranking-bar/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/ranking-bar');\n  QUnit.test('integration/components/ranking-bar/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/ranking-bar/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/ranking-card/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('ranking-card', 'Integration | Component | ranking card', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 16\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'ranking-card', ['loc', [null, [1, 0], [1, 16]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'ranking-card', [], [], 0, null, ['loc', [null, [2, 4], [4, 21]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/ranking-card/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/ranking-card');\n  QUnit.test('integration/components/ranking-card/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/ranking-card/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/ranking-component/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('ranking-component', 'Integration | Component | ranking component', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 21\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'ranking-component', ['loc', [null, [1, 0], [1, 21]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'ranking-component', [], [], 0, null, ['loc', [null, [2, 4], [4, 26]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/ranking-component/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/ranking-component');\n  QUnit.test('integration/components/ranking-component/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/ranking-component/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/storymap-card/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('storymap-card', 'Integration | Component | storymap card', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 17\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'storymap-card', ['loc', [null, [1, 0], [1, 17]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'storymap-card', [], [], 0, null, ['loc', [null, [2, 4], [4, 22]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/storymap-card/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/storymap-card');\n  QUnit.test('integration/components/storymap-card/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/storymap-card/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/integration/components/summary-stat-card/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('summary-stat-card', 'Integration | Component | summary stat card', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 21\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'summary-stat-card', ['loc', [null, [1, 0], [1, 21]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\" + EOL +\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.3.0',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.3.0',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'summary-stat-card', [], [], 0, null, ['loc', [null, [2, 4], [4, 26]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('sdg-dash/tests/integration/components/summary-stat-card/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/summary-stat-card');\n  QUnit.test('integration/components/summary-stat-card/component-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/summary-stat-card/component-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/landing/controller.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - landing');\n  QUnit.test('landing/controller.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'landing/controller.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/landing/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - landing');\n  QUnit.test('landing/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'landing/route.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/locales/ar/config.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ar');\n  QUnit.test('locales/ar/config.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ar/config.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/locales/ar/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ar');\n  QUnit.test('locales/ar/translations.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ar/translations.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/locales/en/config.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en');\n  QUnit.test('locales/en/config.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/config.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/locales/en/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en');\n  QUnit.test('locales/en/translations.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/translations.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/locales/es/config.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/es');\n  QUnit.test('locales/es/config.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/es/config.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/locales/es/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/es');\n  QUnit.test('locales/es/translations.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/es/translations.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/locales/fr/config.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/fr');\n  QUnit.test('locales/fr/config.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/fr/config.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/locales/fr/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/fr');\n  QUnit.test('locales/fr/translations.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/fr/translations.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/locales/ru/config.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru');\n  QUnit.test('locales/ru/config.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/config.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/locales/ru/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru');\n  QUnit.test('locales/ru/translations.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/translations.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/map-overview/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - map-overview');\n  QUnit.test('map-overview/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'map-overview/route.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/map-service/service.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - map-service');\n  QUnit.test('map-service/service.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'map-service/service.js should pass jshint.\\nmap-service/service.js: line 37, col 12, \\'arcgisUtils\\' is not defined.\\nmap-service/service.js: line 54, col 13, \\'round\\' is not defined.\\nmap-service/service.js: line 55, col 13, \\'round\\' is not defined.\\nmap-service/service.js: line 56, col 13, \\'round\\' is not defined.\\nmap-service/service.js: line 57, col 13, \\'round\\' is not defined.\\nmap-service/service.js: line 74, col 21, \\'FeatureLayer\\' is not defined.\\nmap-service/service.js: line 83, col 18, \\'GraphicsLayer\\' is not defined.\\n\\n7 errors');\n  });\n});","define('sdg-dash/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/sdg/adapter.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - sdg');\n  QUnit.test('sdg/adapter.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'sdg/adapter.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/sdg/controller.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - sdg');\n  QUnit.test('sdg/controller.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'sdg/controller.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/sdg/model.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - sdg');\n  QUnit.test('sdg/model.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'sdg/model.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/sdg/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - sdg');\n  QUnit.test('sdg/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'sdg/route.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/sdg/serializer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - sdg');\n  QUnit.test('sdg/serializer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'sdg/serializer.js should pass jshint.\\nsdg/serializer.js: line 27, col 8, Missing semicolon.\\nsdg/serializer.js: line 14, col 65, \\'requestType\\' is defined but never used.\\nsdg/serializer.js: line 14, col 61, \\'id\\' is defined but never used.\\nsdg/serializer.js: line 35, col 71, \\'requestType\\' is defined but never used.\\nsdg/serializer.js: line 35, col 67, \\'id\\' is defined but never used.\\n\\n5 errors');\n  });\n});","define('sdg-dash/tests/sdg-overview/adapter.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - sdg-overview');\n  QUnit.test('sdg-overview/adapter.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'sdg-overview/adapter.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/sdg-overview/controller.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - sdg-overview');\n  QUnit.test('sdg-overview/controller.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'sdg-overview/controller.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/sdg-overview/model.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - sdg-overview');\n  QUnit.test('sdg-overview/model.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'sdg-overview/model.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/sdg-overview/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - sdg-overview');\n  QUnit.test('sdg-overview/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'sdg-overview/route.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/sdg-overview/serializer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - sdg-overview');\n  QUnit.test('sdg-overview/serializer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'sdg-overview/serializer.js should pass jshint.\\nsdg-overview/serializer.js: line 27, col 8, Missing semicolon.\\nsdg-overview/serializer.js: line 14, col 65, \\'requestType\\' is defined but never used.\\nsdg-overview/serializer.js: line 14, col 61, \\'id\\' is defined but never used.\\nsdg-overview/serializer.js: line 35, col 71, \\'requestType\\' is defined but never used.\\nsdg-overview/serializer.js: line 35, col 67, \\'id\\' is defined but never used.\\n\\n5 errors');\n  });\n});","define('sdg-dash/tests/session/service.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - session');\n  QUnit.test('session/service.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'session/service.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/test-helper', ['exports', 'sdg-dash/tests/helpers/resolver', 'ember-qunit'], function (exports, _sdgDashTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_sdgDashTestsHelpersResolver['default']);\n});","define('sdg-dash/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/transitions.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('transitions.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transitions.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/application/controller-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:application', 'Unit | Controller | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('sdg-dash/tests/unit/application/controller-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/application');\n  QUnit.test('unit/application/controller-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/application/controller-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/arcgis-map-sdg-index-service/service-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:arcgis-map-sdg-index-service', 'Unit | Service | arcgis map sdg index service', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('sdg-dash/tests/unit/arcgis-map-sdg-index-service/service-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/arcgis-map-sdg-index-service');\n  QUnit.test('unit/arcgis-map-sdg-index-service/service-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/arcgis-map-sdg-index-service/service-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/arcgis-map-service/service-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:arcgis-map-service', 'Unit | Service | arcgis map service', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('sdg-dash/tests/unit/arcgis-map-service/service-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/arcgis-map-service');\n  QUnit.test('unit/arcgis-map-service/service-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/arcgis-map-service/service-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/helpers/eq-test', ['exports', 'sdg-dash/helpers/eq', 'qunit'], function (exports, _sdgDashHelpersEq, _qunit) {\n\n  (0, _qunit.module)('Unit | Helper | eq');\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    var result = (0, _sdgDashHelpersEq.eq)(42);\n    assert.ok(result);\n  });\n});","define('sdg-dash/tests/unit/helpers/eq-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/helpers');\n  QUnit.test('unit/helpers/eq-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/helpers/eq-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/sdg/adapter-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:sdg', 'Unit | Adapter | sdg', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('sdg-dash/tests/unit/sdg/adapter-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/sdg');\n  QUnit.test('unit/sdg/adapter-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/sdg/adapter-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/sdg-overview/adapter-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:sdg-overview', 'Unit | Adapter | sdg overview', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('sdg-dash/tests/unit/sdg-overview/adapter-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/sdg-overview');\n  QUnit.test('unit/sdg-overview/adapter-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/sdg-overview/adapter-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/sdg-overview/controller-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:sdg-overview', 'Unit | Controller | sdg overview', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('sdg-dash/tests/unit/sdg-overview/controller-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/sdg-overview');\n  QUnit.test('unit/sdg-overview/controller-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/sdg-overview/controller-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/sdg-overview/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('sdg-overview', 'Unit | Model | sdg overview', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('sdg-dash/tests/unit/sdg-overview/model-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/sdg-overview');\n  QUnit.test('unit/sdg-overview/model-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/sdg-overview/model-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/sdg-overview/serializer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('sdg-overview', 'Unit | Serializer | sdg overview', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:sdg-overview']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('sdg-dash/tests/unit/sdg-overview/serializer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/sdg-overview');\n  QUnit.test('unit/sdg-overview/serializer-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/sdg-overview/serializer-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/video-player/controller-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:video-player', 'Unit | Controller | video player', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('sdg-dash/tests/unit/video-player/controller-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/video-player');\n  QUnit.test('unit/video-player/controller-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/video-player/controller-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/unit/video-player/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:video-player', 'Unit | Route | video player', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('sdg-dash/tests/unit/video-player/route-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/video-player');\n  QUnit.test('unit/video-player/route-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/video-player/route-test.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/utils/arcgis-map-utils.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - utils');\n  QUnit.test('utils/arcgis-map-utils.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'utils/arcgis-map-utils.js should pass jshint.\\nutils/arcgis-map-utils.js: line 17, col 32, \\'lang\\' is not defined.\\nutils/arcgis-map-utils.js: line 31, col 16, \\'webMercatorUtils\\' is not defined.\\nutils/arcgis-map-utils.js: line 10, col 8, \\'Ember\\' is defined but never used.\\n\\n3 errors');\n  });\n});","define('sdg-dash/tests/utils/colors.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - utils');\n  QUnit.test('utils/colors.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'utils/colors.js should pass jshint.\\nutils/colors.js: line 28, col 28, Expected an assignment or function call and instead saw an expression.\\nutils/colors.js: line 32, col 12, Expected \\'===\\' and instead saw \\'==\\'.\\nutils/colors.js: line 10, col 8, \\'Ember\\' is defined but never used.\\n\\n3 errors');\n  });\n});","define('sdg-dash/tests/video-player/controller.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - video-player');\n  QUnit.test('video-player/controller.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'video-player/controller.js should pass jshint.');\n  });\n});","define('sdg-dash/tests/video-player/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - video-player');\n  QUnit.test('video-player/route.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'video-player/route.js should pass jshint.\\nvideo-player/route.js: line 20, col 88, Missing semicolon.\\n\\n1 error');\n  });\n});","/* jshint ignore:start */\n\nrequire('sdg-dash/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappingsrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}